---
# Title options
title: "**Disease Mapping: Modelo Logístico, INLA y Reproducibilidad**"
subtitle: "_Autores: Santiago Moncalero, Diego Fernández y Jorge Guitart_"

# Output options
format: pdf
editor: visual
lang: es
execute: 
  warning: false
  
# Style options
fontsize: 10pt
code-block-bg: white
code-block-border-left: "82a3b0" # Must be a "hex" value
---

# 1. Introduccion 

La reproducibilidad y la replicabilidad son pilares fundamentales de la investigación científica. Estos conceptos no solo permiten verificar y validar los análisis realizados por terceros, sino que también facilitan su reutilización en nuevos contextos, fortaleciendo la confianza en los resultados obtenidos y en su validez empírica.

Esta práctica se centra en el mapeo de enfermedades (disease mapping), un área clave de la bioestadística que combina datos geográficos y modelos estadísticos para identificar patrones espaciales de incidencia o mortalidad. Para ello, se emplean dos enfoques metodológicos: WinBUGS, basado en simulaciones de Monte Carlo, e INLA, que utiliza aproximaciones determinísticas. Ambos métodos se aplican para estimar tasas de mortalidad ajustadas y probabilidades espaciales en la región de Aragón.

El objetivo principal de este trabajo es comparar los resultados obtenidos con cada enfoque, analizando su consistencia y destacando las diferencias clave en sus predicciones.

```{r libs.y.datos}
#| include: false

# Cargamos librerías y datos
# Cargamos las librerías necesarias con pacman
pacman::p_load(
  sf,           # Para trabajar con datos espaciales (shapefiles)
  spdep,        # Para la creación de vecinos espaciales
  sp,           # Para trabajar con objetos espaciales
  R2WinBUGS,    # Para integrarse con WinBUGS
  ggplot2,      # Para gráficos
  patchwork,    # Para composición de gráficos
  lattice,      # Para gráficos de alto nivel
  latticeExtra, # Funciones adicionales para gráficos
  viridis,      # Paletas de colores
  gridExtra,    # Manejo avanzado de diseño de gráficos
  RColorBrewer, # Paletas de colores
  INLA,         # Modelado espacial con INLA
  ggthemes,     # Temas para gráficos con ggplot2
  Rgraphviz,    # Para leer gráficos
  graph,        # Para crear grafos
  leaflet,      # Para mapas interactivos
  dplyr         # Para manipulación de datos
)

# Cargamos los datos
load("./material/Aragon.Rdata")     # Cargar el archivo de datos
spatial_data <- st_read("./material/aragon.shp")  # Cargar el shapefile

# Transformamos los datos
spatial_data <- spatial_data[order(spatial_data$CODMUNI), ]  # Ordenamos el dataframe
spatial_data <- cbind(spatial_data, Aragon.df[, 2:3])    # Fusionamos los datos
rm(Aragon.df)  # Eliminamos el dataframe original

# Convertimos a SpatialPointsDataFrame (SPDF)
aragon_spatial_df <- as(spatial_data, "Spatial")

# Calculamos los vecinos (adaptado a WinBUGS)
spatial_neighbors <- nb2WB(poly2nb(aragon_spatial_df))

```

```{r sim1}
#| eval: false
#| echo: false

# Definimos la función del modelo
spatial_model_winbugs <- function() {
  # Definimos el modelo para cada observación
  for (i in 1:nObs) {
    # Distribución de Poisson para las observaciones O
    O[i] ~ dpois(mu[i])
    
    # Relación entre la media y las variables explicativas
    log(mu[i]) <- log(E[i]) + m + het[i] + sp[i]
    
    # Efecto heterogéneo
    het[i] ~ dnorm(0, prechet)
    
    # Tasa de riesgo (R) como exponencial
    R[i] <- exp(m + het[i] + sp[i])
  }
  
  # Definimos el modelo CAR para la dependencia espacial
  sp[1:nObs] ~ car.normal(adj[], w[], num[], precsp)
  
  # Distribución plana para el parámetro m
  m ~ dflat()
  
  # Definimos las precisiones de los efectos heterogéneos y espaciales
  prechet <- pow(sdhet, -2)   # Precisión del efecto heterogéneo
  precsp <- pow(sdsp, -2)     # Precisión del efecto espacial
  
  # Priors para las desviaciones estándar de los efectos
  sdhet ~ dunif(0, 10)        # Priori uniforme para sdhet
  sdsp ~ dunif(0, 10)         # Priori uniforme para sdsp
  
  # Calculamos la probabilidad de que R sea mayor que 1
  for (j in 1:nObs) {
    p.R[j] <- step(R[j] - 1)  # Si R es mayor que 1, p.R será 1, sino 0
  }
}

# Definimos la función para inicializar los valores del modelo
initialize_winbugs <- function() {
  list(m = rnorm(1),          # Inicializamos m con una distribución normal
       sdhet = runif(1),      # Inicializamos sdhet con una distribución uniforme
       sdsp = runif(1))       # Inicializamos sdsp con una distribución uniforme
}

# Cargamos los datos para el modelo
model_data_winbugs <- list(
  O = aragon_spatial_df$O,          # Observaciones de muertes
  E = aragon_spatial_df$E,          # Observaciones de exposiciones
  adj = spatial_neighbors$adj,          # Vecindad entre áreas
  num = spatial_neighbors$num,          # Número de vecinos por área
  w = spatial_neighbors$weights,        # Pesos de las conexiones vecinales
  nObs = length(aragon_spatial_df)  # Número de observaciones (áreas)
)

# Parámetros que queremos obtener
params_model_winbugs <- c("R", "p.R")

# Establecemos una semilla para reproducibilidad
set.seed(123)

# Ejecutamos el modelo con el paquete BUGS
res_model_winbugs <- bugs(
  data = model_data_winbugs,          # Datos del modelo
  model = spatial_model_winbugs,               # Función que define el modelo
  param = params_model_winbugs,        # Parámetros que queremos obtener
  inits = initialize_winbugs          # Valores iniciales del modelo
)

```

```{r res1.save}
#| echo: false
#| eval: false

# Guardamos el resultado para ahorrar tiempo compilando
save(res_model_winbugs, file = "material/res_model_winbugs.Rdata")
```

```{r res1.load}
#| echo: false

# Ejecutamos un chunk para cargar directamente el resultado
load("./material/res_model_winbugs.Rdata")
```

```{r datos.2}
#| echo: false

# Añadimos al data.frame las columnas RME y p.RME
spatial_data$RME <- res_model_winbugs$mean$R
spatial_data$p.RME <- res_model_winbugs$mean$p.R
```

```{r INLA}
#| echo: false

#### --- 1. Cargando los datos --- ####

# Carga del conjunto de datos
load("material/Aragon.Rdata")  # Carga los datos de Aragón
data <- Aragon.df              # Asigna los datos a una variable

# Número de áreas
Nareas <- length(data[,1])     # Cuenta el número de áreas

# Cargando shapefile de Aragón
aragon_shape <- read_sf("material/aragon.shp") 

# Establecer el sistema de coordenadas
aragon_shape <- st_set_crs(aragon_shape, 27700)

#### --- 2. Verificando que los datos del sf y el data.frame coincidan --- ####

# El orden de las áreas debe ser el mismo entre los datos y el objeto espacial,
# por lo que reordenamos los datos para asegurar que coincidan.

aragon_shape <- aragon_shape[order(aragon_shape$CODMUNI), ]

#### --- 2.1. Graficando los datos --- ####

#### ------- 2.1.1. ISQ ------- ####

# Creación de una variable para la tasa de muertes (ISQ)
aragon_shape$posterior_raw <- data$O / data$E  # Tasa de muertes (observado/esperado)

# Definir los rangos para la categorización de ISQ
posterior_raw.cutoff <- c(0.6, 0.9, 1.3, 1.7)
posterior_raw_disc <- cut(aragon_shape$posterior_raw, 
                    breaks = posterior_raw.cutoff, 
                    include.lowest = TRUE)

# Asignar la clasificación de ISQ al shapefile
aragon_shape$posterior_raw_disc <- posterior_raw_disc

#### --- 3. Definiendo la relación de vecinos espaciales --- ####

# Crear la relación de vecinos espaciales usando el sf
temp <- poly2nb(aragon_shape)

nb2INLA("ARG.graph", temp)

#### --- 3.1. Graficando el grafo generado --- ####

# Leer el grafo desde un archivo
H <- inla.read.graph(filename="ARG.graph")

#### --- 4. Ajustando el modelo con efecto BYM --- ####

#### --- 4.0. Añadiendo identificadores para los efectos aleatorios --- ####

# Crear índices para los efectos aleatorios espaciales (S) y no espaciales (U)
S <- U <- seq(1, 729)  # Crea dos índices, uno para cada tipo de efecto

# Añadir los índices a los datos
data <- cbind(data, S, U)

### --- 4.1. Definiendo la fórmula del modelo --- ####

# Fórmula del modelo: se usa un modelo de efectos aleatorios con BYM (Besag-York-Mollié)
formula <- O ~ 1 + f(S, 
                     model = "besag", 
                     graph = H,
                     scale.model = TRUE,
                     hyper = list(prec = list(prior = "loggamma", param = c(1, 0.001)))) +
  f(U, 
    model = "iid",
    hyper = list(prec = list(prior = "loggamma", param = c(1, 0.001))))

### --- 4.2. Ajuste del modelo --- ####

# Ajustar el modelo usando INLA
set.seed(123)  # Establecer semilla para reproducibilidad
spatial_model_inla <- inla(formula,
                family = "poisson",    # Modelo de Poisson
                data = data,
                E = E,                 # Offset (valor esperado)
                control.compute = list(dic = TRUE, waic = TRUE, cpo = TRUE), # Cálculo de DIC, WAIC y CPO
                control.predictor = list(compute = TRUE, cdf = c(log(1)))) # CDF: probabilidad acumulada (logarítmica)

### --- 4.3. Distribución posterior de los efectos aleatorios --- ####

# Obtener y almacenar los resultados de los efectos aleatorios (espaciales)
aragon_shape$SPmean <- round(spatial_model_inla$summary.random$S[["mean"]], 4)
aragon_shape$SPsd <- round(spatial_model_inla$summary.random$S[["sd"]], 5)

# Obtener y almacenar los resultados de los efectos aleatorios (no espaciales)
aragon_shape$UPmean <- round(spatial_model_inla$summary.random$U[["mean"]], 4)
aragon_shape$UPsd <- round(spatial_model_inla$summary.random$U[["sd"]], 5)

### --- 4.4. Distribución posterior de la mortalidad por muertes --- ####

# Almacenar las distribuciones posteriores de la tasa de muertes
aragon_shape$posterior_mean <- spatial_model_inla$summary.fitted.values$mean    # Media
aragon_shape$posterior_sd <- spatial_model_inla$summary.fitted.values$sd        # Desviación estándar
aragon_shape$posterior_median <- spatial_model_inla$summary.fitted.values$`0.5quant`  # Mediana
aragon_shape$posterior_q025 <- spatial_model_inla$summary.fitted.values$`0.025quant` # Cuantil 2.5%
aragon_shape$posterior_q975 <- spatial_model_inla$summary.fitted.values$`0.975quant` # Cuantil 97.5%
aragon_shape$posterior_p1 <- 1 - spatial_model_inla$summary.fitted.values$`1cdf`  # Probabilidad de ser mayor que 1
```

# 2. Resultados: Mapas de RME y RME \> 1

En este apartado, se presentan los mapas resultantes del análisis de tasas de mortalidad ajustadas, específicamente el Riesgo Relativo Estandarizado (RME) y las áreas donde RME \> 1, utilizando dos metodologías: WinBUGS e INLA.

Los mapas generados para ambos enfoques muestran una alta similitud en la distribución espacial de los valores estimados. Esto se evidencia tanto en la intensidad de los colores como en los patrones espaciales observados, lo que refuerza la robustez de las estimaciones obtenidas. En particular, las áreas con RME \> 1, que indican un riesgo relativo superior al promedio, son consistentes entre los modelos, lo cual es relevante para identificar zonas de mayor mortalidad ajustada.

La consistencia entre los resultados de WinBUGS e INLA se puede atribuir a la calidad del ajuste de los modelos y a la naturaleza de los datos. Ambos enfoques utilizan modelos jerárquicos bayesianos para incorporar efectos espaciales y ajustar las tasas de mortalidad observadas, lo que garantiza una adecuada captura de patrones subyacentes. Sin embargo, es importante destacar que, aunque los algoritmos utilizados son distintos (Monte Carlo en WinBUGS y aproximaciones determinísticas en INLA), los dos métodos logran resultados similares debido a su capacidad para modelar de manera efectiva las estructuras espaciales en los datos.

Esta convergencia en los resultados refuerza la validez de los modelos implementados y sugiere que ambos métodos son herramientas confiables para el análisis de datos espaciales en contextos de mapeo de enfermedades. La elección entre uno u otro dependerá, en última instancia, de las necesidades específicas del análisis, como la velocidad de procesamiento (ventaja de INLA) o la exploración de incertidumbre más detallada (fortaleza de WinBUGS).

```{r plots}
#| fig.height: 9
#| fig.width: 9
#| echo: false
#| fig.align: "center"
#| fig.cap: "Mapeo de modelos realizados por INLA y WinBUGS."


# Gráfico INLA: Media posterior
inla_mean_plot <- ggplot(data = aragon_shape) +
  geom_sf(aes(fill = posterior_mean), color = "white") +
  scale_fill_viridis_c(option = "rocket",direction = -1) +
  ggtitle("Aragón, Media posterior (INLA)") +
  theme_classic() +
  labs(fill = "RME") +
  theme(
    legend.position = "bottom",
    axis.text = element_text(hjust = 1, angle = 30),
    plot.title = element_text(hjust = 0.5, size = 15, face = "bold")
  ) +
  guides(fill = guide_colourbar(barwidth = 10, barheight = 1.5))

# Gráfico INLA: Probabilidad (RME> 1)
inla_p_plot <- ggplot(data = aragon_shape) +
  geom_sf(aes(fill = posterior_p1), color = "white") +
  scale_fill_viridis_c(option = "mako", direction=-1) +
  ggtitle("Aragón, P(RME > 1) (INLA)") +
  theme_classic() +
  labs(fill = "P(RME>1)") +
  theme(
    legend.position = "bottom",
    axis.text = element_text(hjust = 1, angle = 30),
    plot.title = element_text(hjust = 0.5, size = 15, face = "bold")
  ) +
  guides(fill = guide_colourbar(barwidth = 10, barheight = 1.5))

# Gráfico winbuGS: Media (RME)
rme_plot <- ggplot(data = spatial_data) +
  geom_sf(aes(fill = RME), color = "white") +
  scale_fill_viridis_c(option = "rocket",direction = -1) +
  ggtitle("Aragón, Media posterior (WinBUGS)") +
  theme_classic() +
  labs(fill = "RME") +
  theme(
    legend.position = "bottom",
    axis.text = element_text(hjust = 1, angle = 30),
    plot.title = element_text(hjust = 0.5, size = 15, face = "bold")
  ) +
  guides(fill = guide_colourbar(barwidth = 10, barheight = 1.5))

# Gráfico winbuGS: Probabilidad (RME > 1)
p_rme_plot <- ggplot(data = spatial_data) +
  geom_sf(aes(fill = p.RME), color = "white") +
  scale_fill_viridis_c(option = "mako",direction = -1) +
  ggtitle("Aragón, P(RME > 1) (WinBUGS)") +
  theme_classic() +
  labs(fill = "P(RME>1)") +
  theme(
    legend.position = "bottom",
    axis.text = element_text(hjust = 1, angle = 30),
    plot.title = element_text(hjust = 0.5, size = 15, face = "bold")
  ) +
  guides(fill = guide_colourbar(barwidth = 10, barheight = 1.5))

# Organización de los gráficos
final_plot <- wrap_plots(inla_mean_plot, plot_spacer(), rme_plot, 
                         inla_p_plot, plot_spacer(), p_rme_plot,
                         ncol = 3, nrow = 2, widths = c(2, 0, 2, 2, 0, 2))

# Mostrar los gráficos
final_plot
```

\newpage

# 3. Correlación entre Resultados de WinBUGS e INLA

Para evaluar cuantitativamente la similitud entre los resultados obtenidos mediante las metodologías WinBUGS e INLA, se calculó la correlación entre las estimaciones de RME y las probabilidades de que RME \> 1.

```{r evaluacion}
#| echo: false
#| message: false
#| warning: false
#| fig.width: 8
#| fig.height: 4.5
#| fig.align: "center"
#| fig.cap: "Dispersiones entre modelos."

## Correlación
cor_RME <- cor(spatial_data$RME, aragon_shape$posterior_mean, use = "complete.obs")
cor_p <- cor(spatial_data$p.RME, aragon_shape$posterior_p1, use = "complete.obs")

cat("Correlación entre RME (winbuGS e INLA):", cor_RME, "\n")
cat("Correlación entre P(RME>1) (winbuGS e INLA):", cor_p, "\n")


scatter_RME <- ggplot(data = NULL, aes(x = spatial_data$RME, y = aragon_shape$posterior_mean)) +
  geom_point(color = "darkgreen", alpha = 0.6) +
  geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +
  ggtitle("Dispersión RME: WinBUGS vs. INLA") +
  xlab("WinBUGS (RME)") + ylab("INLA (RME)") +
  theme_classic()

scatter_p <- ggplot(data = NULL, aes(x = spatial_data$p.RME, y = aragon_shape$posterior_p1)) +
  geom_point(color = "darkblue", alpha = 0.6) +
  geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +
  ggtitle("Dispersión P(RME>1): WinBUGS vs. INLA") +
  xlab("WinBUGS (P(RME>1))") + ylab("INLA (P(RME>1))") +
  theme_classic()

grid.arrange(scatter_RME, scatter_p, nrow = 2)

```

Los coeficientes de correlación obtenidos son notablemente altos:

-   Correlación entre RME: 0.9786
-   Correlación entre P(RME \> 1): 0.9831

Estos valores reflejan una excelente concordancia entre los dos enfoques, lo que respalda la consistencia de las estimaciones generadas independientemente del método utilizado. Tal nivel de similitud indica que ambos modelos logran capturar de manera adecuada los patrones subyacentes en los datos, tanto en las tasas ajustadas como en las probabilidades asociadas a riesgos relativos superiores al promedio.

\newpage

# 4. Comparación de las Densidades Esperadas

En este apartado, se comparan las distribuciones de las densidades esperadas estimadas por los modelos WinBUGS e INLA. Estas densidades reflejan la distribución a posteriori del RME en toda la región de estudio, permitiendo evaluar las características globales de las tasas ajustadas obtenidas con cada metodología.

Al graficar las densidades esperadas de ambos métodos, se observa una similitud destacable en las formas de las distribuciones. Ambas presentan una distribución unimodal con patrones que indican consistencia en las estimaciones. Las diferencias, aunque mínimas, pueden atribuirse a la forma en que cada metodología aborda el ajuste:

-   WinBUGS: Utiliza simulaciones MCMC, lo que permite explorar con mayor profundidad la incertidumbre en las estimaciones, pudiendo generar ligeras variaciones en las colas de la distribución.

-   INLA: Recurre a aproximaciones determinísticas, lo que se traduce en estimaciones más rápidas, aunque puede suavizar ligeramente las colas de la distribución. A pesar de estas diferencias técnicas, las distribuciones esperadas de ambos modelos muestran un alto grado de solapamiento, lo que refuerza la confianza en los resultados obtenidos y la consistencia de las metodologías aplicadas.

La similitud en las densidades esperadas refleja que ambos enfoques capturan de manera adecuada los patrones subyacentes en los datos y que las diferencias metodológicas no impactan significativamente en la interpretación global de los resultados. Esto demuestra que ambos métodos son igualmente válidos y confiables para realizar análisis de mapeo de enfermedades en contextos similares.

```{r graficomedias}
#| echo: false
#| fig.height: 4.5
#| fig.width: 8
#| fig.align: "center"
#| fig.cap: "Gráficos de densidad de la media."


Datos_medias <- data.frame("winbugs" = res_model_winbugs$mean$R, "INLA" = spatial_model_inla$summary.fitted.values$mean)

# Creación del gráfico de densidad
graficomedias <- ggplot(Datos_medias) +
  geom_density(aes(INLA, col = "blue", fill = "blue", alpha = 0.5)) +
  geom_density(aes(winbugs, col = "red", fill = "red", alpha = 0.5)) +
  scale_color_manual(values = c("blue", "red")) +
  scale_fill_manual(values = c("blue", "red")) +
  theme_classic() +
  ggtitle("Comparación de las densidades: INLA vs WINBUGS") +
  xlab("Valores ajustados") +
  ylab("Densidad") +
  theme(
    plot.title = element_text(hjust = 0.5, size = 15, face = "bold"),
    legend.position = "none",  # Elimina la leyenda
    axis.title.x = element_text(size = 12),
    axis.title.y = element_text(size = 12),
    axis.text = element_text(size = 10)
  ) +
  # Añadir recuadro en la parte superior derecha
  annotate("rect", xmin = 1.6, xmax = 1.8, ymin = 2.75, ymax = 3.25, alpha = 0.5, fill = "blue") +
  annotate("text", x = 1.7, y = 3, label = "INLA", color = "white", size = 5, fontface = "bold") +
  annotate("rect", xmin = 1.6, xmax = 1.8, ymin = 2.25, ymax = 2.75, alpha = 0.5, fill = "red") +
  annotate("text", x = 1.7, y = 2.5, label = "WINBUGS", color = "white", size = 5, fontface = "bold")

# Mostrar el gráfico
graficomedias

```

# 5. Conclusiones

En esta práctica se ha llevado a cabo un análisis de mapeo de enfermedades empleando el modelo de Besag, York, y Mollié con dos metodologías diferentes: WinBUGS e INLA. El objetivo era estimar las tasas de mortalidad ajustadas y las probabilidades de que dichas tasas superen el valor 1 en la región de Aragón. Los resultados se han visualizado mediante mapas de la media posterior y probabilidades ajustadas, que han permitido identificar de manera clara las áreas de mayor y menor riesgo relativo.

Por otro lado, la comparación entre los dos métodos ha demostrado una alta consistencia en las predicciones, como lo reflejan tanto los gráficos como los coeficientes de correlación elevados entre las estimaciones de RME y P(RME \> 1). Estas similitudes destacan la robustez de ambos enfoques para capturar los patrones espaciales subyacentes en los datos, a pesar de las diferencias metodológicas en su implementación.

Estos ensayos son plenamente reproducibles, ya que se han establecido semillas para garantizar la replicación de los resultados, y el código completo del proyecto está disponible en GitHub, acompañado de un archivo README que facilita su descarga y ejecución.
